name: CI

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE*'

  pull_request:
    paths-ignore:
      - '**.md'
      - 'LICENSE*'

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  format:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install Rust nightly
        run: |
          rustup toolchain install nightly
          rustup component add rustfmt --toolchain nightly
      - name: Restore cargo caches
        uses: Swatinem/rust-cache@v2
      - name: Check formatting
        run: cargo +nightly fmt --all --verbose -- --check

  test:
    strategy:
      fail-fast: false
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Restore cargo caches
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --all-features --verbose

  clippy:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install Rust nightly
        run: |
          rustup toolchain install nightly
          rustup component add clippy --toolchain nightly
      - name: Restore cargo caches
        uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy --all-features --tests --examples -- -D warnings

  check:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install Rust nightly
        run: rustup toolchain install nightly
      - name: Restore cargo caches
        uses: Swatinem/rust-cache@v2
      - name: Run check
        run: cargo check --all-targets --all-features --verbose

  check-doc:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Install Rust nightly
        run: rustup toolchain install nightly
      - name: Restore cargo caches
        uses: Swatinem/rust-cache@v2
      - name: Run rustdoc nightly
        run: cargo +nightly rustdoc --all-features --verbose -- -D warnings
